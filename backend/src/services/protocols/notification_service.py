"""
üì¢ –ü—Ä–æ—Ç–æ–∫–æ–ª —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Practiti

–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –π–æ–≥–∞-—Å—Ç—É–¥–∏–∏.
"""

from abc import ABC, abstractmethod
from datetime import datetime
from typing import List, Optional, Dict, Any

from ...models.notification import (
    Notification, NotificationCreateData, NotificationUpdateData, 
    NotificationType, NotificationStatus, NotificationPriority
)


class NotificationServiceProtocol(ABC):
    """
    –ü—Ä–æ—Ç–æ–∫–æ–ª —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏.
    
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.
    """
    
    @abstractmethod
    async def create_notification(self, data: NotificationCreateData) -> Notification:
        """
        –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
        
        Args:
            data: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            
        Returns:
            –°–æ–∑–¥–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            
        Raises:
            ValidationError: –ü—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            BusinessLogicError: –ü—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª
        """
        pass
    
    @abstractmethod
    async def create_notification_from_template(
        self, 
        client_id: str, 
        notification_type: NotificationType, 
        template_data: Dict[str, Any],
        scheduled_at: Optional[datetime] = None
    ) -> Notification:
        """
        –°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞.
        
        Args:
            client_id: ID –∫–ª–∏–µ–Ω—Ç–∞-–ø–æ–ª—É—á–∞—Ç–µ–ª—è
            notification_type: –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            template_data: –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —à–∞–±–ª–æ–Ω
            scheduled_at: –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            
        Returns:
            –°–æ–∑–¥–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        """
        pass
    
    @abstractmethod
    async def send_notification(self, notification_id: str) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
        
        Args:
            notification_id: ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            
        Returns:
            True –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, False –∏–Ω–∞—á–µ
        """
        pass
    
    @abstractmethod
    async def send_immediate_notification(
        self, 
        client_id: str, 
        notification_type: NotificationType, 
        template_data: Dict[str, Any]
    ) -> bool:
        """
        –°–æ–∑–¥–∞—Ç—å –∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
        
        Args:
            client_id: ID –∫–ª–∏–µ–Ω—Ç–∞-–ø–æ–ª—É—á–∞—Ç–µ–ª—è
            notification_type: –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            template_data: –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —à–∞–±–ª–æ–Ω
            
        Returns:
            True –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, False –∏–Ω–∞—á–µ
        """
        pass
    
    @abstractmethod
    async def get_notification(self, notification_id: str) -> Notification:
        """
        –ü–æ–ª—É—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ ID.
        
        Args:
            notification_id: ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            
        Returns:
            –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            
        Raises:
            BusinessLogicError: –ï—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        """
        pass
    
    @abstractmethod
    async def get_all_notifications(self, limit: Optional[int] = None, offset: Optional[int] = None) -> List[Notification]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
        
        Args:
            limit: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            offset: –°–º–µ—â–µ–Ω–∏–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            
        Returns:
            –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        """
        pass
    
    @abstractmethod
    async def get_client_notifications(
        self, 
        client_id: str, 
        limit: Optional[int] = None
    ) -> List[Notification]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞.
        
        Args:
            client_id: ID –∫–ª–∏–µ–Ω—Ç–∞
            limit: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            
        Returns:
            –°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞
        """
        pass
    
    @abstractmethod
    async def get_pending_notifications(self) -> List[Notification]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
        
        Returns:
            –°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        """
        pass
    
    @abstractmethod
    async def get_scheduled_notifications(self, before_time: datetime) -> List[Notification]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
        
        Args:
            before_time: –í—Ä–µ–º—è, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –∏—Å–∫–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            
        Returns:
            –°–ø–∏—Å–æ–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        """
        pass
    
    @abstractmethod
    async def mark_as_sent(self, notification_id: str, telegram_message_id: Optional[int] = None) -> Notification:
        """
        –û—Ç–º–µ—Ç–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ.
        
        Args:
            notification_id: ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            telegram_message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
            
        Returns:
            –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        """
        pass
    
    @abstractmethod
    async def mark_as_delivered(self, notification_id: str) -> Notification:
        """
        –û—Ç–º–µ—Ç–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ.
        
        Args:
            notification_id: ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            
        Returns:
            –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        """
        pass
    
    @abstractmethod
    async def mark_as_failed(self, notification_id: str, error_message: str) -> Notification:
        """
        –û—Ç–º–µ—Ç–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –Ω–µ—É–¥–∞—á–Ω–æ–µ.
        
        Args:
            notification_id: ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            error_message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            
        Returns:
            –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        """
        pass
    
    @abstractmethod
    async def retry_failed_notifications(self) -> int:
        """
        –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–µ—É–¥–∞—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
        
        Returns:
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–≤—Ç–æ—Ä–Ω–æ
        """
        pass
    
    @abstractmethod
    async def cancel_notification(self, notification_id: str) -> Notification:
        """
        –û—Ç–º–µ–Ω–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
        
        Args:
            notification_id: ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            
        Returns:
            –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        """
        pass
    
    @abstractmethod
    async def process_scheduled_notifications(self) -> int:
        """
        –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
        
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Å—Ç—É–ø–∏–ª–æ.
        
        Returns:
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        """
        pass
    
    @abstractmethod
    async def send_subscription_expiring_notifications(self, days_before: int = 3) -> int:
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏—Å—Ç–µ–∫–∞—é—â–∏—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞—Ö.
        
        Args:
            days_before: –ó–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
            
        Returns:
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        """
        pass
    
    @abstractmethod
    async def send_classes_running_out_notifications(self, classes_threshold: int = 2) -> int:
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏—Ö—Å—è –∑–∞–Ω—è—Ç–∏—è—Ö.
        
        Args:
            classes_threshold: –ü—Ä–∏ –∫–∞–∫–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∑–∞–Ω—è—Ç–∏–π –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
            
        Returns:
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        """
        pass
    
    @abstractmethod
    async def get_notification_statistics(self, client_id: Optional[str] = None) -> Dict[str, Any]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º.
        
        Args:
            client_id: ID –∫–ª–∏–µ–Ω—Ç–∞ (–µ—Å–ª–∏ None, —Ç–æ –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        """
        pass 