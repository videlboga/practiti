"""
üí¨ –ú–æ–¥–µ–ª—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ CyberKitty Practiti

–ú–æ–¥–µ–ª—å –¥–ª—è —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤ –∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏–π.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ post-class –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.
"""

from datetime import datetime
from enum import Enum
from typing import Optional, Dict, Any
from uuid import uuid4

from pydantic import BaseModel, Field, field_validator


class FeedbackType(str, Enum):
    """–¢–∏–ø—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏."""
    POST_CLASS = "post_class"           # –ü–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏—è
    SUBSCRIPTION_END = "subscription_end"  # –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
    GENERAL = "general"                 # –û–±—â–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    COMPLAINT = "complaint"             # –ñ–∞–ª–æ–±–∞
    SUGGESTION = "suggestion"           # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ


class FeedbackStatus(str, Enum):
    """–°—Ç–∞—Ç—É—Å—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏."""
    PENDING = "pending"                 # –û–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞
    SUBMITTED = "submitted"             # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
    REVIEWED = "reviewed"               # –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞
    RESPONDED = "responded"             # –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç


class Feedback(BaseModel):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
    
    –•—Ä–∞–Ω–∏—Ç –æ—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ –∑–∞–Ω—è—Ç–∏—è—Ö –∏ —É—Å–ª—É–≥–∞—Ö —Å—Ç—É–¥–∏–∏.
    """
    
    id: str = Field(default_factory=lambda: str(uuid4()), description="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
    client_id: str = Field(..., description="ID –∫–ª–∏–µ–Ω—Ç–∞")
    type: FeedbackType = Field(..., description="–¢–∏–ø –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
    status: FeedbackStatus = Field(default=FeedbackStatus.PENDING, description="–°—Ç–∞—Ç—É—Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    rating: Optional[int] = Field(default=None, ge=1, le=5, description="–û—Ü–µ–Ω–∫–∞ –æ—Ç 1 –¥–æ 5")
    comment: Optional[str] = Field(default=None, max_length=1000, description="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–∞")
    
    # –°–≤—è–∑–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    booking_id: Optional[str] = Field(default=None, description="ID –∑–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)")
    subscription_id: Optional[str] = Field(default=None, description="ID –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)")
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ (–¥–ª—è post-class feedback)
    class_rating: Optional[int] = Field(default=None, ge=1, le=5, description="–û—Ü–µ–Ω–∫–∞ –∑–∞–Ω—è—Ç–∏—è")
    teacher_rating: Optional[int] = Field(default=None, ge=1, le=5, description="–û—Ü–µ–Ω–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")
    studio_rating: Optional[int] = Field(default=None, ge=1, le=5, description="–û—Ü–µ–Ω–∫–∞ —Å—Ç—É–¥–∏–∏")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    would_recommend: Optional[bool] = Field(default=None, description="–ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª –±—ã –¥—Ä—É–∑—å—è–º")
    difficulty_level: Optional[str] = Field(default=None, description="–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (–ª–µ–≥–∫–æ/–Ω–æ—Ä–º–∞–ª—å–Ω–æ/—Å–ª–æ–∂–Ω–æ)")
    favorite_part: Optional[str] = Field(default=None, max_length=500, description="–ß—Ç–æ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å")
    improvement_suggestions: Optional[str] = Field(default=None, max_length=500, description="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é")
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    metadata: Dict[str, Any] = Field(default_factory=dict, description="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
    created_at: datetime = Field(default_factory=datetime.now, description="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è")
    submitted_at: Optional[datetime] = Field(default=None, description="–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
    reviewed_at: Optional[datetime] = Field(default=None, description="–î–∞—Ç–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
    
    @field_validator('rating', 'class_rating', 'teacher_rating', 'studio_rating')
    @classmethod
    def validate_rating(cls, v: Optional[int]) -> Optional[int]:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ü–µ–Ω–æ–∫."""
        if v is not None and (v < 1 or v > 5):
            raise ValueError('–û—Ü–µ–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 5')
        return v
    
    @field_validator('difficulty_level')
    @classmethod
    def validate_difficulty_level(cls, v: Optional[str]) -> Optional[str]:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏."""
        if v is not None:
            allowed_levels = ['–ª–µ–≥–∫–æ', '–Ω–æ—Ä–º–∞–ª—å–Ω–æ', '—Å–ª–æ–∂–Ω–æ']
            if v.lower() not in allowed_levels:
                raise ValueError(f'–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: {", ".join(allowed_levels)}')
            return v.lower()
        return v
    
    @property
    def overall_rating(self) -> Optional[float]:
        """–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤."""
        ratings = [r for r in [self.class_rating, self.teacher_rating, self.studio_rating] if r is not None]
        if not ratings:
            return self.rating
        
        if self.rating is not None:
            ratings.append(self.rating)
        
        return sum(ratings) / len(ratings) if ratings else None
    
    @property
    def is_positive(self) -> Optional[bool]:
        """–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–∑—ã–≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º."""
        overall = self.overall_rating
        if overall is None:
            return None
        return overall >= 4.0
    
    @property
    def is_complete(self) -> bool:
        """–ó–∞–ø–æ–ª–Ω–µ–Ω–∞ –ª–∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ–ª–Ω–æ—Å—Ç—å—é."""
        if self.type == FeedbackType.POST_CLASS:
            return (
                self.rating is not None and
                self.comment is not None and
                len(self.comment.strip()) > 0
            )
        return self.comment is not None and len(self.comment.strip()) > 0

    def __str__(self) -> str:
        """–°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏."""
        rating_str = f" ({self.rating}‚òÖ)" if self.rating else ""
        return f"Feedback({self.type.value}{rating_str})"
    
    def __repr__(self) -> str:
        """Repr –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏."""
        return f"Feedback(id={self.id}, client_id={self.client_id}, type={self.type})"


class FeedbackCreateData(BaseModel):
    """
    –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–∑—ã–≤–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞.
    """
    
    client_id: str = Field(..., description="ID –∫–ª–∏–µ–Ω—Ç–∞")
    type: FeedbackType = Field(..., description="–¢–∏–ø –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
    booking_id: Optional[str] = Field(default=None, description="ID –∑–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ")
    subscription_id: Optional[str] = Field(default=None, description="ID –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞")
    metadata: Dict[str, Any] = Field(default_factory=dict, description="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")


class FeedbackUpdateData(BaseModel):
    """
    –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
    """
    
    status: Optional[FeedbackStatus] = Field(default=None, description="–°—Ç–∞—Ç—É—Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
    rating: Optional[int] = Field(default=None, ge=1, le=5, description="–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞")
    comment: Optional[str] = Field(default=None, max_length=1000, description="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏
    class_rating: Optional[int] = Field(default=None, ge=1, le=5, description="–û—Ü–µ–Ω–∫–∞ –∑–∞–Ω—è—Ç–∏—è")
    teacher_rating: Optional[int] = Field(default=None, ge=1, le=5, description="–û—Ü–µ–Ω–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")
    studio_rating: Optional[int] = Field(default=None, ge=1, le=5, description="–û—Ü–µ–Ω–∫–∞ —Å—Ç—É–¥–∏–∏")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    would_recommend: Optional[bool] = Field(default=None, description="–ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª –±—ã –¥—Ä—É–∑—å—è–º")
    difficulty_level: Optional[str] = Field(default=None, description="–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
    favorite_part: Optional[str] = Field(default=None, max_length=500, description="–ß—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å")
    improvement_suggestions: Optional[str] = Field(default=None, max_length=500, description="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
    
    # –í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã
    _validate_rating = field_validator('rating', 'class_rating', 'teacher_rating', 'studio_rating')(
        Feedback.validate_rating.__func__
    )
    _validate_difficulty = field_validator('difficulty_level')(Feedback.validate_difficulty_level.__func__)


class FeedbackSummary(BaseModel):
    """
    –°–≤–æ–¥–∫–∞ –ø–æ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –æ—Ç—á–µ—Ç–æ–≤.
    """
    
    total_feedback: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤")
    average_rating: Optional[float] = Field(default=None, description="–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞")
    positive_feedback_percentage: float = Field(..., description="–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤")
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    rating_distribution: Dict[int, int] = Field(default_factory=dict, description="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫")
    common_complaints: list[str] = Field(default_factory=list, description="–ß–∞—Å—Ç—ã–µ –∂–∞–ª–æ–±—ã")
    common_compliments: list[str] = Field(default_factory=list, description="–ß–∞—Å—Ç—ã–µ –ø–æ—Ö–≤–∞–ª—ã")
    
    # –ü–æ —Ç–∏–ø–∞–º
    post_class_count: int = Field(default=0, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏–π")
    general_count: int = Field(default=0, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—â–∏—Ö –æ—Ç–∑—ã–≤–æ–≤")
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥
    period_start: datetime = Field(..., description="–ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞")
    period_end: datetime = Field(..., description="–ö–æ–Ω–µ—Ü –ø–µ—Ä–∏–æ–¥–∞") 