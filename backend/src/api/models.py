"""
üìã Pydantic –º–æ–¥–µ–ª–∏ –¥–ª—è REST API

–°—Ö–µ–º—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤.
–ü—Ä–∏–Ω—Ü–∏–ø CyberKitty: –ø—Ä–æ—Å—Ç–æ—Ç–∞ –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ.
"""

from pydantic import BaseModel, Field, validator
from typing import Optional, List, Dict, Any
from datetime import datetime
from enum import Enum

from ..models.client import ClientStatus
from ..models.subscription import SubscriptionType, SubscriptionStatus
from ..models.notification import NotificationType, NotificationStatus, NotificationPriority


# ===== –û–ë–©–ò–ï –ú–û–î–ï–õ–ò =====

class APIResponse(BaseModel):
    """–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –æ—Ç–≤–µ—Ç–∞ API."""
    success: bool = True
    message: Optional[str] = None
    data: Optional[Any] = None


class PaginationParams(BaseModel):
    """–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏."""
    page: int = Field(1, ge=1, description="–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    limit: int = Field(20, ge=1, le=100, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")


class PaginatedResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    items: List[Any]
    total: int
    page: int
    limit: int
    pages: int


# ===== –ö–õ–ò–ï–ù–¢–´ =====

class ClientCreateRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞."""
    name: str = Field(..., min_length=2, max_length=100, description="–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞")
    phone: str = Field(..., description="–¢–µ–ª–µ—Ñ–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX")
    telegram_id: int = Field(..., description="Telegram ID")
    yoga_experience: bool = Field(..., description="–ï—Å—Ç—å –ª–∏ –æ–ø—ã—Ç –π–æ–≥–∏")
    intensity_preference: str = Field(..., description="–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏")
    time_preference: str = Field(..., description="–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏")
    age: Optional[int] = Field(None, ge=16, le=100, description="–í–æ–∑—Ä–∞—Å—Ç")
    injuries: Optional[str] = Field(None, max_length=500, description="–¢—Ä–∞–≤–º—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è")
    goals: Optional[str] = Field(None, max_length=500, description="–¶–µ–ª–∏ –∑–∞–Ω—è—Ç–∏–π")
    how_found_us: Optional[str] = Field(None, max_length=200, description="–ö–∞–∫ —É–∑–Ω–∞–ª –æ —Å—Ç—É–¥–∏–∏")


class ClientUpdateRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞."""
    name: Optional[str] = Field(None, min_length=2, max_length=100)
    phone: Optional[str] = Field(None, description="–¢–µ–ª–µ—Ñ–æ–Ω")
    yoga_experience: Optional[bool] = None
    intensity_preference: Optional[str] = None
    time_preference: Optional[str] = None
    age: Optional[int] = Field(None, ge=16, le=100)
    injuries: Optional[str] = Field(None, max_length=500)
    goals: Optional[str] = Field(None, max_length=500)
    how_found_us: Optional[str] = Field(None, max_length=200)
    status: Optional[ClientStatus] = None


class ClientResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞."""
    id: str
    name: str
    phone: str
    telegram_id: int
    yoga_experience: bool
    intensity_preference: str
    time_preference: str
    age: Optional[int]
    injuries: Optional[str]
    goals: Optional[str]
    how_found_us: Optional[str]
    status: ClientStatus
    created_at: datetime

    class Config:
        from_attributes = True


class ClientSearchRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤."""
    query: Optional[str] = Field(None, max_length=100, description="–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
    status: Optional[ClientStatus] = Field(None, description="–°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞")
    yoga_experience: Optional[bool] = Field(None, description="–û–ø—ã—Ç –π–æ–≥–∏")
    intensity_preference: Optional[str] = Field(None, description="–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å")
    time_preference: Optional[str] = Field(None, description="–í—Ä–µ–º—è")


# ===== –ê–ë–û–ù–ï–ú–ï–ù–¢–´ =====

class SubscriptionCreateRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞."""
    client_id: str = Field(..., description="ID –∫–ª–∏–µ–Ω—Ç–∞")
    subscription_type: SubscriptionType = Field(..., description="–¢–∏–ø –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞")
    classes_total: int = Field(..., ge=1, le=50, description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–∏–π")
    price_paid: float = Field(..., ge=0, description="–û–ø–ª–∞—á–µ–Ω–Ω–∞—è —Å—É–º–º–∞")
    payment_method: str = Field(..., max_length=50, description="–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã")
    notes: Optional[str] = Field(None, max_length=500, description="–ó–∞–º–µ—Ç–∫–∏")


class SubscriptionResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞."""
    id: str
    client_id: str
    subscription_type: SubscriptionType
    classes_total: int
    classes_used: int
    classes_remaining: int
    price_paid: float
    payment_method: str
    status: SubscriptionStatus
    start_date: datetime
    end_date: datetime
    notes: Optional[str]
    created_at: datetime
    updated_at: datetime

    class Config:
        from_attributes = True


class UseClassRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è."""
    subscription_id: str = Field(..., description="ID –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞")
    class_date: datetime = Field(..., description="–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è")
    class_type: str = Field(..., max_length=100, description="–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è")
    instructor: Optional[str] = Field(None, max_length=100, description="–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä")
    notes: Optional[str] = Field(None, max_length=500, description="–ó–∞–º–µ—Ç–∫–∏")


# ===== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø =====

class NotificationCreateRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."""
    client_id: str = Field(..., description="ID –∫–ª–∏–µ–Ω—Ç–∞")
    notification_type: NotificationType = Field(..., description="–¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    title: str = Field(..., min_length=1, max_length=200, description="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    message: str = Field(..., min_length=1, max_length=1000, description="–°–æ–æ–±—â–µ–Ω–∏–µ")
    priority: NotificationPriority = Field(NotificationPriority.NORMAL, description="–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç")
    scheduled_at: Optional[datetime] = Field(None, description="–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
    metadata: Optional[Dict[str, Any]] = Field(None, description="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")


class NotificationResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."""
    id: str
    client_id: str
    notification_type: NotificationType
    title: str
    message: str
    priority: NotificationPriority
    status: NotificationStatus
    scheduled_at: Optional[datetime]
    sent_at: Optional[datetime]
    delivered_at: Optional[datetime]
    failed_at: Optional[datetime]
    retry_count: int
    metadata: Optional[Dict[str, Any]]
    created_at: datetime
    updated_at: datetime

    class Config:
        from_attributes = True


class NotificationSearchRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
    client_id: Optional[str] = Field(None, description="ID –∫–ª–∏–µ–Ω—Ç–∞")
    notification_type: Optional[NotificationType] = Field(None, description="–¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    status: Optional[NotificationStatus] = Field(None, description="–°—Ç–∞—Ç—É—Å")
    priority: Optional[NotificationPriority] = Field(None, description="–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç")
    date_from: Optional[datetime] = Field(None, description="–î–∞—Ç–∞ –æ—Ç")
    date_to: Optional[datetime] = Field(None, description="–î–∞—Ç–∞ –¥–æ")


# ===== –ê–ù–ê–õ–ò–¢–ò–ö–ê =====

class AnalyticsResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏."""
    period: str
    data: Dict[str, Any]
    generated_at: datetime


class ClientStatsResponse(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º."""
    total_clients: int
    active_clients: int
    new_clients_this_month: int
    clients_by_experience: Dict[str, int]
    clients_by_status: Dict[str, int]


class SubscriptionStatsResponse(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞–º."""
    total_subscriptions: int
    active_subscriptions: int
    revenue_this_month: float
    subscriptions_by_type: Dict[str, int]
    average_subscription_value: float


class NotificationStatsResponse(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º."""
    total_notifications: int
    sent_notifications: int
    delivered_notifications: int
    failed_notifications: int
    delivery_rate: float
    notifications_by_type: Dict[str, int] 